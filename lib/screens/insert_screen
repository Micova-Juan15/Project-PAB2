import 'package:flutter/material.dart';
import 'package:image_picker/image_picker.dart';
import 'package:cloud_firestore/cloud_firestore.dart';

class InsertScreen extends StatelessWidget {
  final TextEditingController imageUrlController = TextEditingController();
  final TextEditingController questionController = TextEditingController();
  final TextEditingController choice1Controller = TextEditingController();
  final TextEditingController choice2Controller = TextEditingController();
  final TextEditingController choice3Controller = TextEditingController();
  final TextEditingController choice4Controller = TextEditingController();
  final TextEditingController correctChoiceController = TextEditingController();
  final TextEditingController mapCoordinatesController = TextEditingController();

  final FirebaseFirestore firestore = FirebaseFirestore.instance;

  void _insertQuestion(BuildContext context) async {
    try {
      await firestore.collection('quiz').add({
        'image_url': imageUrlController.text,
        'question': questionController.text,
        'choice1': choice1Controller.text,
        'choice2': choice2Controller.text,
        'choice3': choice3Controller.text,
        'choice4': choice4Controller.text,
        'correct_choice': int.parse(correctChoiceController.text),
        'map_coordinates': mapCoordinatesController.text,
      });
      // Clear text fields
      imageUrlController.clear();
      questionController.clear();
      choice1Controller.clear();
      choice2Controller.clear();
      choice3Controller.clear();
      choice4Controller.clear();
      correctChoiceController.clear();
      mapCoordinatesController.clear();
      ScaffoldMessenger.of(context).showSnackBar(
        SnackBar(content: Text('Pertanyaan berhasil ditambahkan ke Firebase')),
      );
    } catch (e) {
      print('Error inserting question: $e');
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: const Color.fromARGB(255, 73, 128, 117),
      appBar: AppBar(
        backgroundColor: const Color.fromARGB(255, 73, 128, 117),
        title: Text('Insert Question', style: TextStyle(color: Colors.white)),
        leading: IconButton(
          icon: Icon(Icons.arrow_back, color: Colors.white),
          onPressed: () {
            Navigator.pop(context);
          },
        ),
      ),
      body: Padding(
        padding: EdgeInsets.all(16.0),
        child: ListView(
          children: [
            ElevatedButton(
              onPressed: () async {
                final pickedFile = await ImagePicker().getImage(source: ImageSource.gallery);
                if (pickedFile != null) {
                  imageUrlController.text = pickedFile.path;
                } else {
                  print('No image selected.');
                }
              },
              style: ButtonStyle(
                backgroundColor: MaterialStateProperty.all<Color>(Colors.black),
              ),
              child: Text(
                'Pick Image',
                style: TextStyle(color: Colors.white),
              ),
            ),

            TextFormField(
              controller: questionController,
              cursorColor: const Color(0xFF777777),
              style: const TextStyle(color: Colors.black),
              decoration: InputDecoration(
                labelText: 'Insert Question',
                labelStyle: const TextStyle(color: Colors.black),
                hintText: 'Enter Question',
                hintStyle: const TextStyle(color: Colors.black),
                border: OutlineInputBorder(
                  borderRadius: BorderRadius.circular(20.0),
                  borderSide: const BorderSide(
                    color: Colors.black,
                    width: 5.0,
                  ),
                ),
              ),
            ),
            TextFormField(
              controller: choice1Controller,
              cursorColor: const Color(0xFF777777),
              style: const TextStyle(color: Colors.black),
              decoration: InputDecoration(
                labelText: 'Choice 1',
                labelStyle: const TextStyle(color: Colors.black),
                hintText: 'Enter Choice 1',
                hintStyle: const TextStyle(color: Colors.black),
                border: OutlineInputBorder(
                  borderRadius: BorderRadius.circular(20.0),
                  borderSide: const BorderSide(
                    color: Colors.black,
                    width: 5.0,
                  ),
                ),
              ),
            ),
            TextFormField(
              controller: choice2Controller,
              cursorColor: const Color(0xFF777777),
              style: const TextStyle(color: Colors.black),
              decoration: InputDecoration(
                labelText: 'Choice 2',
                labelStyle: const TextStyle(color: Colors.black),
                hintText: 'Enter Choice 2',
                hintStyle: const TextStyle(color: Colors.black),
                border: OutlineInputBorder(
                  borderRadius: BorderRadius.circular(20.0),
                  borderSide: const BorderSide(
                    color: Colors.black,
                    width: 5.0,
                  ),
                ),
              ),
            ),
            TextFormField(
              controller: choice3Controller,
              cursorColor: const Color(0xFF777777),
              style: const TextStyle(color: Colors.black),
              decoration: InputDecoration(
                labelText: 'Choice 3',
                labelStyle: const TextStyle(color: Colors.black),
                hintText: 'Enter Choice 3',
                hintStyle: const TextStyle(color: Colors.black),
                border: OutlineInputBorder(
                  borderRadius: BorderRadius.circular(20.0),
                  borderSide: const BorderSide(
                    color: Colors.black,
                    width: 5.0,
                  ),
                ),
              ),
            ),
            TextFormField(
              controller: choice4Controller,
              cursorColor: const Color(0xFF777777),
              style: const TextStyle(color: Colors.black),
              decoration: InputDecoration(
                labelText: 'Choice 4',
                labelStyle: const TextStyle(color: Colors.black),
                hintText: 'Enter Choice 4',
                hintStyle: const TextStyle(color: Colors.black),
                border: OutlineInputBorder(
                  borderRadius: BorderRadius.circular(20.0),
                  borderSide: const BorderSide(
                    color: Colors.black,
                    width: 5.0,
                  ),
                ),
              ),
            ),
            TextFormField(
              controller: correctChoiceController,
              cursorColor: const Color(0xFF777777),
              style: const TextStyle(color: Colors.black),
              decoration: InputDecoration(
                labelText: 'Insert Correct Choice Number',
                labelStyle: const TextStyle(color: Colors.black),
                hintText: 'Enter Correct Number',
                hintStyle: const TextStyle(color: Colors.black),
                border: OutlineInputBorder(
                  borderRadius: BorderRadius.circular(20.0),
                  borderSide: const BorderSide(
                    color: Colors.black,
                    width: 5.0,
                  ),
                ),
              ),
            ),
            TextFormField(
              controller: mapCoordinatesController,
              cursorColor: const Color(0xFF777777),
              style: const TextStyle(color: Colors.black),
              decoration: InputDecoration(
                labelText: 'Insert Map Coordinates',
                labelStyle: const TextStyle(color: Colors.black),
                hintText: 'Enter Map Coordinates',
                hintStyle: const TextStyle(color: Colors.black),
                border: OutlineInputBorder(
                  borderRadius: BorderRadius.circular(20.0),
                  borderSide: const BorderSide(
                    color: Colors.black,
                    width: 5.0,
                  ),
                ),
              ),
            ),
            SizedBox(height: 20),
            ElevatedButton(
              onPressed: () => _insertQuestion(context),
              style: ButtonStyle(
                backgroundColor: MaterialStateProperty.all<Color>(Colors.black),
              ),
              child: Text(
                'Insert Question',
                style: TextStyle(color: Colors.white),
              ),
            ),
          ],
        ),
      ),
    );
  }
}
